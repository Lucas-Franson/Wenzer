# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.x]
    
    defaults:
      run:
        shell: bash
        working-directory: wenzer_web
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: ls
    - run: npm ci
    - run: npm run build --if-present

  test_web:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [12.x]
    defaults:
      run:
        shell: bash
        working-directory: wenzer_web
    steps:
      - uses: actions/checkout@v2

      - name: Testing Web...
        run: |
          npm ci
          npm run test
          cd ../wenzer_back
          npm i
          npm run test

  test_back:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [12.x]
    defaults:
      run:
        shell: bash
        working-directory: wenzer_back
    steps:
      - uses: actions/checkout@v2

      - name: Testing Backend...
        run: |
          npm ci
          npm run test

continuous-deployment:
    runs-on: ubuntu-latest
    needs: [test_web, test_back]
    if: github.ref == 'refs/heads/main'
    steps:
     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name wenzer-app \
            --deployment-group-name WenzerDeploymentGroup \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}